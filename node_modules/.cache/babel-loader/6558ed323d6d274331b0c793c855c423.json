{"ast":null,"code":"var _jsxFileName = \"/home/kandarp/Desktop/rgolsgym/src/Components/Stripe/Stripe.js\";\nimport { Radio, withStyles } from '@material-ui/core';\nimport { CardCvcElement, CardExpiryElement, CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState } from 'react';\nimport './Stripe.css';\nimport payment1 from '../../images/payment/payment1.png';\nimport payment2 from '../../images/payment/payment2.png';\nimport payment3 from '../../images/payment/payment3.png';\nimport payPal from '../../images/payment/payPal.png';\nimport PaypalBtn from 'react-paypal-checkout';\nimport { useContext } from 'react';\nimport { PaymentContext } from '../Pricing/Pricing';\n\nconst SubmitButton = ({\n  processing,\n  error,\n  children,\n  disabled\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  style: {\n    backgroundColor: 'goldenrod',\n    border: 'none',\n    borderRadius: '5px',\n    padding: '5px 10px',\n    outline: 'none',\n    marginLeft: '14px'\n  },\n  className: `SubmitButton ${error ? 'SubmitButton--error' : ''}`,\n  type: \"submit\",\n  disabled: processing || disabled,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, processing ? 'Processing...' : children);\n\nconst ErrorMessage = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"ErrorMessage\",\n  role: \"alert\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 17 17\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#6772e5\",\n  d: \"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }\n})), children);\n\nconst ResetButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  className: \"ResetButton\",\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"svg\", {\n  width: \"32px\",\n  height: \"32px\",\n  viewBox: \"0 0 32 32\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}))); // radio\n\n\nconst GoldenRadio = withStyles({\n  root: {\n    color: 'goldenrod',\n    '&$checked': {\n      color: 'goldenrod'\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Radio, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 15\n  }\n})));\n\nconst Stripe = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [cardComplete, setCardComplete] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [billingDetails, setBillingDetails] = useState({\n    name: ''\n  });\n  const [selectedValue, setSelectedValue] = useState('a');\n  const [paymentMethod, setPaymentMethod] = useContext(PaymentContext);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    if (error) {\n      elements.getElement('card').focus();\n      return;\n    }\n\n    if (cardComplete) {\n      setProcessing(true);\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: billingDetails\n    });\n    setProcessing(false);\n\n    if (payload.error) {\n      setError(payload.error);\n    } else {\n      setPaymentMethod(payload.paymentMethod);\n    }\n  };\n\n  const reset = () => {\n    setError(null);\n    setProcessing(false);\n    setPaymentMethod(null);\n    setBillingDetails({\n      name: ''\n    });\n  };\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  }; // PayPal\n\n\n  const onSuccess = payment => {\n    // Congratulation, it came here means everything's fine!\n    console.log(\"The payment was succeeded!\", payment);\n  };\n\n  const onCancel = data => {\n    // User pressed \"cancel\" or close Paypal's popup!\n    console.log('The payment was cancelled!', data);\n  };\n\n  const onError = err => {\n    // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n    console.log(\"Error!\", err);\n  };\n\n  let env = 'sandbox';\n  let currency = 'USD';\n  let total = 1;\n  let locale = 'en_US';\n  let style = {\n    'label': 'pay',\n    'tagline': false,\n    'size': 'medium',\n    'shape': 'pill',\n    'color': 'gold'\n  };\n  const client = {\n    sandbox: 'AavWMx-6T-JoXrCWXQvTJboeiahgkUSvmvJ-LyjHGlMDOnTjoaKLGWzc67vE-HBS5J1ncaAUv38XMvk6',\n    production: 'YOUR-PRODUCTION-APP-ID'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"creditCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GoldenRadio, {\n    checked: selectedValue === 'a',\n    onChange: handleChange,\n    value: \"a\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'A'\n    },\n    style: {\n      position: 'relative',\n      bottom: '5px',\n      height: '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, \"Credit Card\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"Safe money transfer using your bank account, Visa, Maestro, Discover, American Express.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paymentImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: payment1,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: payment2,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: payment3,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: selectedValue === 'a' ? '200px' : '0',\n      opacity: selectedValue === 'a' ? '1' : '0',\n      transition: '2s',\n      marginTop: '5px',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, paymentMethod ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ResultTitle\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, \"Payment successful\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ResultMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, \"Thanks for trying Stripe Elements. No money was charged, but we generated a PaymentMethod: \", paymentMethod.id), /*#__PURE__*/React.createElement(ResetButton, {\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"FormGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, \"CARD NUMBER\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardNumberElement, {\n    className: \"cardNumber\",\n    required: true,\n    onChange: e => {\n      setError(e.error);\n      setCardComplete(e.complete);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 41\n    }\n  }, \"NAME ON CARD\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Your Name\",\n    required: true,\n    autoComplete: \"name\",\n    value: billingDetails.name,\n    onChange: e => {\n      setBillingDetails({ ...billingDetails,\n        name: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }\n  }, \"EXPIRE DATE\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardExpiryElement, {\n    required: true,\n    onChange: e => {\n      setError(e.error);\n      setCardComplete(e.complete);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 41\n    }\n  }, \"CVC CODE\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardCvcElement, {\n    required: true,\n    onChange: e => {\n      setError(e.error);\n      setCardComplete(e.complete);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }))))), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 39\n    }\n  }, error.message), /*#__PURE__*/React.createElement(SubmitButton, {\n    processing: processing,\n    error: error,\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, \"Pay\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payPal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GoldenRadio, {\n    checked: selectedValue === 'b',\n    onChange: handleChange,\n    value: \"b\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'B'\n    },\n    style: {\n      position: 'relative',\n      bottom: '5px',\n      height: '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, \"PayPal\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"You will be redirect to PayPal website to complete your purchase securely.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payPalImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: payPal,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: selectedValue === 'b' ? '40px' : '0',\n      opacity: selectedValue === 'b' ? '1' : '0',\n      transition: '2s',\n      marginTop: '10px',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PaypalBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: total,\n    locale: locale,\n    style: style,\n    onError: onError,\n    onSuccess: onSuccess,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Stripe;","map":{"version":3,"sources":["/home/kandarp/Desktop/rgolsgym/src/Components/Stripe/Stripe.js"],"names":["Radio","withStyles","CardCvcElement","CardExpiryElement","CardNumberElement","useElements","useStripe","React","useState","payment1","payment2","payment3","payPal","PaypalBtn","useContext","PaymentContext","SubmitButton","processing","error","children","disabled","backgroundColor","border","borderRadius","padding","outline","marginLeft","ErrorMessage","ResetButton","onClick","GoldenRadio","root","color","checked","props","Stripe","stripe","elements","setError","cardComplete","setCardComplete","setProcessing","billingDetails","setBillingDetails","name","selectedValue","setSelectedValue","paymentMethod","setPaymentMethod","handleSubmit","event","preventDefault","getElement","focus","payload","createPaymentMethod","type","card","billing_details","reset","handleChange","target","value","onSuccess","payment","console","log","onCancel","data","onError","err","env","currency","total","locale","style","client","sandbox","production","position","bottom","height","opacity","transition","marginTop","overflow","id","e","complete","message"],"mappings":"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","sourcesContent":["import { Radio, withStyles } from '@material-ui/core';\nimport { CardCvcElement, CardExpiryElement, CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState } from 'react';\nimport './Stripe.css';\nimport payment1 from '../../images/payment/payment1.png';\nimport payment2 from '../../images/payment/payment2.png';\nimport payment3 from '../../images/payment/payment3.png';\nimport payPal from '../../images/payment/payPal.png';\nimport PaypalBtn from 'react-paypal-checkout';\nimport { useContext } from 'react';\nimport {PaymentContext} from '../Pricing/Pricing'\n\nconst SubmitButton = ({ processing, error, children, disabled }) => (\n    <button\n        style={{\n            backgroundColor: 'goldenrod',\n            border: 'none',\n            borderRadius: '5px',\n            padding: '5px 10px',\n            outline: 'none',\n            marginLeft: '14px'\n        }}\n        className={`SubmitButton ${error ? 'SubmitButton--error' : ''}`}\n        type=\"submit\"\n        disabled={processing || disabled}\n    >\n        {processing ? 'Processing...' : children}\n    </button>\n);\n\nconst ErrorMessage = ({ children }) => (\n    <div className=\"ErrorMessage\" role=\"alert\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 17 17\">\n            <path\n                fill=\"#FFF\"\n                d=\"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\"\n            />\n            <path\n                fill=\"#6772e5\"\n                d=\"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\"\n            />\n        </svg>\n        {children}\n    </div>\n);\n\nconst ResetButton = ({ onClick }) => (\n    <button type=\"button\" className=\"ResetButton\" onClick={onClick}>\n        <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\n            <path\n                fill=\"#FFF\"\n                d=\"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\"\n            />\n        </svg>\n    </button>\n);\n\n// radio\n\nconst GoldenRadio = withStyles({\n    root: {\n        color: 'goldenrod',\n        '&$checked': {\n            color: 'goldenrod',\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst Stripe = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [error, setError] = useState(null);\n    const [cardComplete, setCardComplete] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [billingDetails, setBillingDetails] = useState({ name: '', });\n    const [selectedValue, setSelectedValue] = useState('a');\n    const [paymentMethod, setPaymentMethod] = useContext(PaymentContext)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n        }\n\n        if (error) {\n            elements.getElement('card').focus();\n            return;\n        }\n\n        if (cardComplete) {\n            setProcessing(true);\n        }\n\n        const payload = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardNumberElement),\n            billing_details: billingDetails,\n        });\n\n        setProcessing(false);\n\n        if (payload.error) {\n            setError(payload.error);\n        } else {\n            setPaymentMethod(payload.paymentMethod);\n        }\n    };\n\n    const reset = () => {\n        setError(null);\n        setProcessing(false);\n        setPaymentMethod(null);\n        setBillingDetails({\n            name: '',\n        });\n    };\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n    // PayPal\n\n    const onSuccess = (payment) => {\n        // Congratulation, it came here means everything's fine!\n        console.log(\"The payment was succeeded!\", payment);\n    }\n\n    const onCancel = (data) => {\n        // User pressed \"cancel\" or close Paypal's popup!\n        console.log('The payment was cancelled!', data);\n    }\n\n    const onError = (err) => {\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        console.log(\"Error!\", err);\n    }\n\n\n    let env = 'sandbox';\n    let currency = 'USD';\n    let total = 1;\n    let locale = 'en_US';\n\n    let style = {\n        'label': 'pay',\n        'tagline': false,\n        'size': 'medium',\n        'shape': 'pill',\n        'color': 'gold',\n    };\n\n    const client = {\n        sandbox: 'AavWMx-6T-JoXrCWXQvTJboeiahgkUSvmvJ-LyjHGlMDOnTjoaKLGWzc67vE-HBS5J1ncaAUv38XMvk6',\n        production: 'YOUR-PRODUCTION-APP-ID',\n    }\n\n    return (\n        <div className='stripe'>\n            <div>\n                <div className='creditCard'>\n                    <div>\n                        <GoldenRadio\n                            checked={selectedValue === 'a'}\n                            onChange={handleChange}\n                            value=\"a\"\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'A' }}\n                            style={{\n                                position: 'relative',\n                                bottom: '5px',\n                                height: '25px'\n                            }}\n                        />\n                        <div>\n                            <p>Credit Card</p>\n                            <small>Safe money transfer using your bank account, Visa, Maestro, Discover, American Express.</small>\n                        </div>\n                    </div>\n                    <div className='paymentImg'>\n                        <img src={payment1} alt=\"\" />\n                        <img src={payment2} alt=\"\" />\n                        <img src={payment3} alt=\"\" />\n                    </div>\n                </div>\n                <div style={{\n                    height: selectedValue === 'a' ? '200px' : '0',\n                    opacity: selectedValue === 'a' ? '1' : '0',\n                    transition: '2s',\n                    marginTop: '5px',\n                    overflow: 'hidden'\n                }}>\n                    {paymentMethod ?\n                        <div className=\"Result\">\n                            <div className=\"ResultTitle\" role=\"alert\">\n                                Payment successful\n                        </div>\n                            <div className=\"ResultMessage\">\n                                Thanks for trying Stripe Elements. No money was charged, but we\n                                generated a PaymentMethod: {paymentMethod.id}\n                            </div>\n                            <ResetButton onClick={reset} />\n                        </div>\n                        :\n                        <form className=\"Form\" onSubmit={handleSubmit}>\n                            <fieldset className=\"FormGroup\">\n                                <div>\n                                    <label>CARD NUMBER</label>\n                                    <div>\n                                        <CardNumberElement\n                                            className='cardNumber'\n                                            required\n                                            onChange={(e) => {\n                                                setError(e.error);\n                                                setCardComplete(e.complete);\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div>\n                                        <label>NAME ON CARD</label>\n                                        <br />\n                                        <input\n                                            id='name'\n                                            type=\"text\"\n                                            placeholder='Your Name'\n                                            required\n                                            autoComplete='name'\n                                            value={billingDetails.name}\n                                            onChange={(e) => {\n                                                setBillingDetails({ ...billingDetails, name: e.target.value })\n                                            }}\n                                        />\n                                    </div>\n                                    <div>\n                                        <label>EXPIRE DATE</label>\n                                        <div>\n                                            <CardExpiryElement required onChange={(e) => {\n                                                setError(e.error);\n                                                setCardComplete(e.complete);\n                                            }} />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <label>CVC CODE</label>\n                                        <div>\n                                            <CardCvcElement required onChange={(e) => {\n                                                setError(e.error);\n                                                setCardComplete(e.complete);\n                                            }} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </fieldset>\n                            {error && <ErrorMessage>{error.message}</ErrorMessage>}\n                            <SubmitButton processing={processing} error={error} disabled={!stripe}>\n                                Pay\n                            </SubmitButton>\n                        </form>\n                    }\n                </div>\n            </div>\n            <div>\n                <div className='payPal'>\n                    <div>\n                        <GoldenRadio\n                            checked={selectedValue === 'b'}\n                            onChange={handleChange}\n                            value=\"b\"\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'B' }}\n                            style={{\n                                position: 'relative',\n                                bottom: '5px',\n                                height: '25px'\n                            }}\n                        />\n                        <div>\n                            <p>PayPal</p>\n                            <small>You will be redirect to PayPal website to complete your purchase securely.</small>\n                        </div>\n                    </div>\n                    <div className='payPalImg'>\n                        <img src={payPal} alt=\"\" />\n                    </div>\n                </div>\n                <div style={{\n                    height: selectedValue === 'b' ? '40px' : '0',\n                    opacity: selectedValue === 'b' ? '1' : '0',\n                    transition: '2s',\n                    marginTop: '10px',\n                    overflow: 'hidden'\n                }}>\n                    <PaypalBtn\n                        env={env}\n                        client={client}\n                        currency={currency}\n                        total={total}\n                        locale={locale}\n                        style={style}\n                        onError={onError}\n                        onSuccess={onSuccess}\n                        onCancel={onCancel} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Stripe;"]},"metadata":{},"sourceType":"module"}